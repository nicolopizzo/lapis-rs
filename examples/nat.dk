Nat: Type.

zero: Nat.
succ: Nat -> Type.

def S: Nat -> Nat.

def plus: Nat -> Nat -> Nat.
[ n ] plus zero n --> n.
[ m: Nat, n: Nat] plus (S m) n --> S (plus m n).

def K : n: Nat -> m: succ n -> Nat := n: Nat => m: succ n => n.
